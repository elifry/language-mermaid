'scopeName': 'source.mermaid'
'name': 'Mermaid'
'fileTypes': ['mm', 'mermaid', 'mmd']

'patterns': [

    # Tag Numeric Values (int, float)
    {
    'match': '\\b(([0-9]+\\.?[0-9]*)|(\\.[0-9]+))\\b'
    'name': 'constant.numeric.mermaid'
    }

    # Subgraph Tag
    {
      'match': '\\b(subgraph)\\s+([\\w\\ 0-9]+)'
      'captures':
        '1':
            'name': 'keyword.control.mermaid'
        '2':
            'name': 'entity.name.function.mermaid'
    'name': 'meta.function.mermaid'
    }

    # Graph Tag
    {
      'match': '\\b(graph)\\s+([\\w\\ 0-9]+)'
      'captures':
        '1':
            'name': 'keyword.control.mermaid'
        '2':
            'name': 'entity.name.function.mermaid'
    'name': 'meta.function.mermaid'
    }

    # Tag 'end' and directions
    {
      'match': '\\b(end|RB|BT|RL|TD|LR)\\b'
      'name': 'keyword.control.mermaid'
    }

    # Objects with parentasis
    {
      'match': '\\b([\\w0-9\\_]+)[\\[\\(]{1,2}(.+)[\\]\\)]{1,2}'
      'captures':
        '1':
            'name': 'punctuation.definition.tag.mermaid'
        '2':
            'name': 'punctuation.definition.variable.mermaid'
    'name': 'meta.variable.mermaid'
    }

    # Decision Tree
    {
      'match': '\\b([\\w0-9\\_]+)[\\{]{1,2}(.+)[\\}]{1,2}'
      'captures':
        '1':
            'name': 'punctuation.definition.tag.mermaid'
        '2':
            'name': 'punctuation.definition.parameters.mermaid'
    'name': 'meta.variable.mermaid'
    }

    # Arrows without text
    {
      'match': '\\b([\\w0-9\\_]+)\\s+?([\\-\\.\\>\\<]{2,5})\\s+?([\\w0-9\\_]+)'
      'captures':
        '1':
            'name': 'punctuation.definition.string.mermaid'
        '2':
            'name': 'keyword.other.special-method.mermaid'
        '3':
            'name': 'punctuation.definition.string.mermaid'
    'name': 'meta.variable.mermaid'
    }

    # Arrows with text
    {
      'match': '\\b([\\w0-9\\_]+)\\s?+([\\-\\.\\>\\<]{2,4})\\s?+([\\|])([\\w\\ 0-9\\_]+)([\\|])\\s?+([\\w0-9\\ \\_]+)'
      'captures':
        '1':
            'name': 'punctuation.definition.string.mermaid'
        '2':
            'name': 'keyword.other.special-method.mermaid'
        '4':
            'name': 'keyword.control.import.mermaid'
        '6':
            'name': 'keyword.control.exception.mermaid'
    'name': 'meta.variable.mermaid'
    }

    # Comment Tag
    {
      'match': '\\b([\\%]{2}\\s?.+)\\b'
      'captures':
          '1':
            'name': 'punctuation.definition.comment.mermaid'
      'name': 'punctuation.definition.comment.mermaid'
    }

    # Arrows with text (and might be dots.)
    {
      'match': '\\b([0-9\\w\\_]+)\s?(\\-[\\w0-9\\.\\_\\-]+)\-[\\>\\<\\-]\\s?([\\w0-9\\_]+)'
      'captures':
        '1':
            'name': 'punctuation.definition.string.mermaid'
        '2':
            'name': 'keyword.other.special-method.mermaid'
        '3':
            'name': 'keyword.control.import.mermaid'
    'name': 'meta.variable.mermaid'
    }

    # Dotted lines
    {
      'match': '\\b([\\w0-9\\_]+)\\s([\\-\\.\\>\<]{3,6})\\s?([\\w0-9\\_]+)'
      'captures':
        '1':
            'name': 'punctuation.definition.string.mermaid'
        '2':
            'name': 'keyword.other.special-method.mermaid'
        '4':
            'name': 'keyword.control.import.mermaid'
        '6':
            'name': 'keyword.control.exception.mermaid'
    'name': 'meta.variable.mermaid'
    }

    # comment
    {
    'match': '^\\s*@@.*$'
    'name': 'comment'
    }

    # keyword classDiagram
    {
      "match": 'classDiagram'
      'name': 'keyword.control.mermaid'
    }

    # define classname
    {
      "match": "(class) (\\w*)"
      "captures": {
        "1": {
          "name": "keyword.control.mermaid"
             }
        "2": {
          "name": "entity.name.type.class.mermaid"
        }
      }
    }

    # classname and colon before define member or method
    {
      "match": "(\\w*)\\s?(:)"
      "captures": {
        "1": {
          "name": "entity.name.function.mermaid"
        }
        "2": {
          "name": "punctuation.section.class.begin.mermaid"
        }
      }
    }

    # inheritance arrow
    {
      "match": "(\\w*)\\s?(<\\|--)\\s?(\\w*)"
      "captures": {
        "1": {
          "name": "entity.name.function.mermaid"
             }
        "2": {
          "name": "keyword.operator.math.mermaid"
             }
        "3": {
          "name": "entity.name.function.mermaid"
        }
      }
    }

    # member
    {
      "match": "(\\+|-)(\\w*)\\s(\\w*)"
      "captures": {
        "1": {
          "name": "keyword.operator.math.mermaid"
        }
        "2": {
          "name": "keyword.type.mermaid"
        }
        "3": {
          "name": "variable"
        }
      }
    }

    # method
    {
      "match": "(\\+|-)(\\w*\\(\\))"
      "captures": {
        "1": {
          "name": "keyword.operator.math.mermaid"
        }
        "2": {
          "name": "string"
        }
      }
    }
]
